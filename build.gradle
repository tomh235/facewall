apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'java'


buildscript {
    repositories {
        maven { url "http://jcenter.bintray.com/" }
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
    }
}

/*
// gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
    //distributionPath = "gradle/distribution" // for local distribution of gradle included in the project
}
*/

allprojects {
    repositories {
        mavenCentral()
        maven { url "http://m2.neo4j.org/content/repositories/releases/" }
        maven { url "http://mvnrepository.com" }
    }
}

idea {
    project {
        jdkName = '1.7'
        languageLevel = '1.7'
        ipr.withXml { provider -> provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git' }
    }

    module {
        downloadSources = true
    }
}

dependencies {

    // start Embedded Tomcat dependencies
    def tomcatVersion = '7.0.50'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    // end Embedded Tomcat dependencies

    compile "org.neo4j:neo4j-rest-graphdb:1.9"
    compile "org.neo4j:neo4j-kernel:1.9.5"

    compile "org.freemarker:freemarker:2.3.20"

    compile "org.glassfish.jersey.core:jersey-server:2.5.1"
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.5.1'
    compile 'org.glassfish.jersey.ext:jersey-mvc:2.5.1'

    compile 'org.apache.commons:commons-io:1.3.2'

    // begin Hibernate Validator dependencies
    compile 'org.hibernate:hibernate-validator:5.1.0.CR1'
    compile 'org.hibernate:hibernate-validator-annotation-processor:5.0.3.Final'
    compile 'javax.el:javax.el-api:2.2.4'
    compile 'org.glassfish.web:javax.el:2.2.4'
    // end Hibernate Validator dependencies

    slf4jVersion = "1.7.4"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
//    compile "ch.qos.logback:logback-core:1.0.12"
//    compile "ch.qos.logback:logback-classic:1.0.12"

    testCompile "junit:junit:4.11"
    testCompile "org.hamcrest:hamcrest-all:1.1"
    testCompile "org.mockito:mockito-all:1.9.5"

    testCompile "org.neo4j:neo4j-kernel:1.9.5:tests"
    testCompile "org.neo4j.app:neo4j-server:1.9.5"
    testCompile "org.neo4j.app:neo4j-server:1.9.5:static-web"

    testCompile project(':facewall-database-utils')
}

tomcatRunWar {
    httpPort = 9000
}

task tomcatDaemonRunWar(type: org.gradle.api.plugins.tomcat.TomcatRunWar) {
    httpPort = 9001
    daemon = true //this does not work
}

//task stage(dependsOn: ['clean','build','tomcatRunWar'])
task stage(dependsOn: ['tomcatRunWar'])

war {
    archiveName = "facewall.war"
    from 'public'
}

task stage {
    dependsOn 'build'
}
